name: Publish All

on:
  workflow_dispatch:

jobs:
  kmmbridgepublish:
    permissions:
      contents: write
      packages: write
    concurrency: "kmmbridgepublish-${{ github.repository }}"
    runs-on: macos-latest

    steps:
      - name: Checkout the repo with tags
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: touchlab/read-property@0.1
        id: versionPropertyValue
        with:
          file: ./gradle.properties
          property: LIBRARY_VERSION

      - name: Print versionPropertyValue
        run: echo "Version is ${{ steps.versionPropertyValue.outputs.propVal }}"

      - uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: 17

      - uses: gradle/actions/setup-gradle@v4

      - name: Cache KMP tooling
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan
          key: ${{ runner.os }}-v1-${{ hashFiles('**/libs.versions.toml') }}

      - name: Build and Publish KMPLibrary
        run: ./gradlew :kmp:kmmBridgePublish :kmp:publish -PENABLE_PUBLISHING=true -PGITHUB_PUBLISH_TOKEN=${{ secrets.GITHUB_TOKEN }} -PGITHUB_REPO=${{ github.repository }} --no-daemon --stacktrace
        env:
          GRADLE_OPTS: -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=512m"

      - name: Download Skiko.xcframework
        run: |
          curl -L -o skiko.zip https://github.com/JetBrains/skiko/releases/download/0.9.16/skiko.xcframework.zip
          unzip skiko.zip

      - name: Combine KMPLibrary and Skiko into one package
        run: |
          cd kmp/build/XCFrameworks/release
          mkdir KMPLibrary_Package
          mv KMPLibrary.xcframework KMPLibrary_Package/
          mv skiko.xcframework KMPLibrary_Package/
          zip -r KMPLibrary.xcframework.zip KMPLibrary_Package
          mv KMPLibrary.xcframework.zip ${{ github.workspace }}

      - name: Compute checksum
        run: |
          CHECKSUM=$(swift package compute-checksum KMPLibrary.xcframework.zip)
          echo "CHECKSUM=$CHECKSUM" >> $GITHUB_ENV

      - name: Update Package.swift with URL and checksum
        run: |
          VERSION=${{ steps.versionPropertyValue.outputs.propVal }}
          REPO_URL="https://github.com/${{ github.repository }}/releases/download/$VERSION/KMPLibrary.xcframework.zip"
          cat > Package.swift <<EOF
          // swift-tools-version:5.6
          import PackageDescription

          let package = Package(
              name: "KMPLibrary",
              platforms: [.iOS(.v13)],
              products: [
                  .library(
                      name: "KMPLibrary",
                      targets: ["KMPLibrary"]
                  ),
              ],
              targets: [
                  .binaryTarget(
                      name: "KMPLibrary",
                      url: "$REPO_URL",
                      checksum: "${{ env.CHECKSUM }}"
                  )
              ]
          )
          EOF

      - name: Commit updated Package.swift
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add Package.swift
          git commit -m "Update Package.swift for version ${{ steps.versionPropertyValue.outputs.propVal }}"
          git push origin HEAD

      - name: Upload xcframework archive to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.versionPropertyValue.outputs.propVal }}
          files: KMPLibrary.xcframework.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: touchlab/ga-update-release-tag@v1
        id: update-release-tag
        with:
          commitMessage: "KMP SPM packages release for ${{ steps.versionPropertyValue.outputs.propVal }}"
          tagMessage: "KMP release version ${{ steps.versionPropertyValue.outputs.propVal }}"
          tagVersion: ${{ steps.versionPropertyValue.outputs.propVal }}

